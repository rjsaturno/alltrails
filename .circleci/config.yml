version: 2.1

#Orbs required for tooling installation
orbs:
  aws-cli: circleci/aws-cli@3.0.0
  kubernetes: circleci/kubernetes@1.3.0
  docker: circleci/docker@2.0.3

jobs:
  build-and-deploy:
    # Spin up docker environment
    docker:
      - image: cimg/base:stable
    steps:
      #Checkout code found in the at-interviews-helloworld Github repo
      - checkout
      #Install aws-cli
      - aws-cli/install
      #Install kubectl
      - kubernetes/install
      #Create remote Docker environment for Docker command execution
      - setup_remote_docker:
          version: 20.10.12
      #Setup AWS credentials
      - aws-cli/setup:
          configure-default-region: true 
          configure-profile-region: true 
          disable-aws-pager: true 
          override-installed: false 
          aws-access-key-id: AWS_ACCESS_KEY_ID 
          aws-region: AWS_DEFAULT_REGION 
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
     #Install Helm 3.0
      - run:
          name: Install Helm 
          command: (curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh) && (chmod 700 get_helm.sh) && (./get_helm.sh)
      #Get AWS Account Number
      - run: 
          name: Get AWS Account Number
          command: echo AWS Account Number is $(aws --profile default sts get-caller-identity | grep Account | awk '{print $2}' |  tr -d \"\,)
      #Get shortened commit hash 
      - run: 
          name: Get Commit ID
          command: echo commit ID is CIRCLE_SHA1
      # Update .kube config
      - run:
          name: Update .kube config file w/ eks authenication info
          command: aws eks update-kubeconfig --profile default --region $AWS_DEFAULT_REGION --name at-interviews-cluster
      # Use .kube config
      - run:
          name: Use .kube config
          command: kubectl config use-context arn:aws:eks:us-west-2:310228935478:cluster/at-interviews-cluster
      # Login to Amazon ECR
      - run: 
          name: Login into Amazon ECR
          command: aws ecr get-login-password --profile default --region us-west-2 | docker login --username AWS --password-stdin $(aws --profile default sts get-caller-identity | grep Account | awk '{print $2}' |  tr -d \"\,).dkr.ecr.us-west-2.amazonaws.com
      # Build Docker Container
      - run:
          name: Build Docker Container
          command: docker build --no-cache -t helloworld:$(git rev-parse --verify --short HEAD) -t $(aws --profile default sts get-caller-identity | grep Account | awk '{print $2}' |  tr -d \"\,).dkr.ecr.us-west-2.amazonaws.com/helloworld:$(git rev-parse --verify --short HEAD) .
      #Push Container to ECR
      - run:
          name: Send Container to ECR
          command: docker push $(aws --profile default sts get-caller-identity | grep Account | awk '{print $2}' |  tr -d \"\,).dkr.ecr.us-west-2.amazonaws.com/helloworld:$(git rev-parse --verify --short HEAD)
     #Deploy Container
      - run:
          name: Deploy Container
          command: helm upgrade --install --create-namespace CIRCLE_USERNAME --namespace helloworld --set image.tag=$(git rev-parse --verify --short HEAD) helm/helloworld
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  pipeline-workflow:
    jobs:
      - build-and-deploy
